name: Build and release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Initialize submodules
        run: git submodule update --init --recursive
        shell: bash

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Cache .venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: uv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}

      - name: uv sync
        run: uv sync
        shell: bash

      - name: uv run build.py
        run: uv run build.py
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatic release for tag: ${{ github.ref_name }}
            Windows executable attached below.
          draft: false
          prerelease: false

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/main.exe
          asset_name: main.exe
          asset_content_type: application/vnd.microsoft.portable-executable
